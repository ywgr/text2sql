# TEXT2SQL分析系统 - 完整产品开发需求文档
# 总结流程：修改代码 → git add . → git commit -m "说明" → git push origin main，这是日常常更新代码到 GitHub 的标准流程。
## 1. 项目概述:  .\VENV\SCRIPTS\ACTIVATE   streamlit run text2sql_enhanced.py    streamlit run text2sql_enhanced.py                                                                              │
│##  streamlit run text2sql_local_deepseek.py    streamlit run text2sql_local_deepseek.py  python start_text2sql.py 
   streamlit run text2sql_v2.5.py   python -m streamlit run text2sql_v2.5.py
## streamlit run text2sql_v2.3_enhanced_fixed.py    streamlit run text2sql_v2.3_enhanced.py
**系统名称：** TEXT2SQL 分析系统    .\VENV_NEW\SCRIPTS\ACTIVATE
.\VENV\SCRIPTS\ACTIVATE  streamlit run text2sql_v2.4.py

streamlit run text2sql_v2.5_new.py
streamlit run text2sql_v2.5_ui.py

**核心功能：** 基于AI的自然语言转SQL查询分析平台  
**技术框架：** Streamlit + Vanna + LangChain + DeepSeek  
**开发目标：** 让业务人员通过自然语言查询库存数据并获得可视化分析结果
**主要功能：**python 中 使用deepseek 和vanna 来搭建一个text2sql 系统，数据库使用mssql ，需要实现自然语言查询数据库，对查询结果分析，生成图表，并能自我训练，我需要输入业务规则 ，术语和字段的匹配，多表关系能支持自动生成，能导入并优化提示词， 能支持多表查询，在完成SQL 后需要再核查字段必须是数据库表的字段，语法正确，是否使用多表查询，是否有图表展示，是否有数据分析等功能。
Vanna  可以简单参考：''' from vanna.remote import VannaDefault

api_key = "35d688e1655847838c9d0e318168d4f0"
vanna_model_name = "chinook"  # 示例模型名，可替换为你的模型

vn = VannaDefault(model=vanna_model_name, api_key=api_key)

sql = vn.generate_sql(question="查询所有专辑的名称和艺术家")
print("生成的 SQL：", sql)  '''

## 2. 技术架构

```
前端界面：Streamlit Web应用
大模型： DeepSeek  或  Vanna A
Text2SQL引擎：Vanna AI  , API KEY : 35d688e1655847838c9d0e318168d4f0
LLM支持：DeepSeek API (https://api.deepseek.com/v1/chat/completions)
API密钥：sk-0e6005b793aa4759bb022b91e9055f86
辅助框架：LangChain
数据库：搭建一个MYSQL 数据库 ：YY
     建立三张表：学生成绩，课程信息，学生信息， 并创建测试数据，表之前有关系
可视化：Vanna内置图表 + Streamlit组件
向量数据库：用于知识库存储和检索
图数据库：Neo4j (用于表关系可视化)
```

## 3. 系统工作流程
提示词： 
```
用户自然语言输入 → 知识库检索匹配 → Vanna解析问题 → 应用映射规则 → 生成SQL语句 → 语法验证 → 执行查询 → 结果展示 → 自动可视化 → 用户评分反馈
```
你是一个SQL专家。根据以下数据库结构和用户问题，生成准确的SQL查询语句。

数据库结构：
{schema_info}

业务规则：
{business_rules}

用户问题：{question}

重要要求：
1. 只返回SQL语句，不要其他解释
2. 确保所有字段名都存在于数据库表中
3. 如果需要多表查询，使用正确的JOIN语句
4. 如试用sqlit 数据库，使用SQLite语法， MSSQL 数据库，试用 sql server 语法
5. 应用业务规则进行术语转换
6. 将用户问题预处理： 将问题先分解为：
  6.1查询内容：内容的主体 和 内容 ，比如510S的全链库存 ， 主体是510S，内容是全链库存 ,主体是产品和业务，产品从产品知识库中获取，业务从业务知识库中获取； 主体是条件 (where 后)； 内容是查询的字段，从数据结构表中获取相应的字段，
  6.2时间条件：按数据库表结构字段和知识库规则获取 ，比如 25年6月 ， where 自然年=2025 and 财月='6月' and 财周='ttl'
  6.3  1. 查询什么表 2. 查询什么字段 3. 查询什么条件 4. 查询什么排序 5. 查询什么分组 6. 查询什么聚合 7. 查询什么窗口 8. 查询什么子查询 9. 查询什么连接 10. 查询什么子查询 11. 查询什么子查询 12. 查询什么子查询 13. 查询什么子查询 14. 查询什么子查询 15. 查询什么子查询 16. 查询什么子查询 17. 查询什么子查询 18. 查询什么子查询 19. 查询什么子查询 20. 查询什么子查询
  6.4 多表还是单表，如果必须使用多表，则需要使用正确的JOIN语句， 关联关系必须使用数据表结构知识库的关联关系
7.产品知识库的产品按PN/[GROUP]/[Roadmap family]/model  由底-》高，分为四级，在表FF_IDSS_Dev_FF.dbo.dtsupply_summary  中，数据包括按产品层级和时间（财周） 汇总数据，但不含PN ， 以此 当选择产品时，如果选择高级的产品 和财月，低级产品 ='ttl'  and 财周='ttl',  例如： 510S 25年6月 的全链库存  --》 select 全链库存 from FF_IDSS_Dev_FF.dbo.dtsupply_summary  where [Roadmap family] like '%510S%' and [group]='ttl' and 自然年=2025 and 财月='6月' and 财周='ttl'


SQL语句：
