# TEXT2SQL分析系统 - 完整产品开发需求文档
# 总结流程：修改代码 → git add . → git commit -m "说明" → git push origin main，这是日常常更新代码到 GitHub 的标准流程。
## 1. 项目概述:  .\VENV\SCRIPTS\ACTIVATE   streamlit run text2sql_enhanced.py    streamlit run text2sql_enhanced.py                                                                              │
│##  streamlit run text2sql_local_deepseek.py    streamlit run text2sql_local_deepseek.py  python start_text2sql.py 
   streamlit run text2sql_v2.1.py
## streamlit run text2sql_v2.3_enhanced_fixed.py    streamlit run text2sql_v2.3_enhanced.py
**系统名称：** TEXT2SQL 分析系统  
**核心功能：** 基于AI的自然语言转SQL查询分析平台  
**技术框架：** Streamlit + Vanna + LangChain + DeepSeek  
**开发目标：** 让业务人员通过自然语言查询库存数据并获得可视化分析结果
**主要功能：**python 中 使用deepseek 和vanna 来搭建一个text2sql 系统，数据库使用mssql ，需要实现自然语言查询数据库，对查询结果分析，生成图表，并能自我训练，我需要输入业务规则 ，术语和字段的匹配，多表关系能支持自动生成，能导入并优化提示词， 能支持多表查询，在完成SQL 后需要再核查字段必须是数据库表的字段，语法正确，是否使用多表查询，是否有图表展示，是否有数据分析等功能。
Vanna  可以简单参考：''' from vanna.remote import VannaDefault

api_key = "35d688e1655847838c9d0e318168d4f0"
vanna_model_name = "chinook"  # 示例模型名，可替换为你的模型

vn = VannaDefault(model=vanna_model_name, api_key=api_key)

sql = vn.generate_sql(question="查询所有专辑的名称和艺术家")
print("生成的 SQL：", sql)  '''

## 2. 技术架构

```
前端界面：Streamlit Web应用
大模型： DeepSeek  或  Vanna A
Text2SQL引擎：Vanna AI  , API KEY : 35d688e1655847838c9d0e318168d4f0
LLM支持：DeepSeek API (https://api.deepseek.com/v1/chat/completions)
API密钥：sk-0e6005b793aa4759bb022b91e9055f86
辅助框架：LangChain
数据库：搭建一个MYSQL 数据库 ：YY
     建立三张表：学生成绩，课程信息，学生信息， 并创建测试数据，表之前有关系
可视化：Vanna内置图表 + Streamlit组件
向量数据库：用于知识库存储和检索
图数据库：Neo4j (用于表关系可视化)
```

## 3. 系统工作流程

```
用户自然语言输入 → 知识库检索匹配 → Vanna解析问题 → 应用映射规则 → 生成SQL语句 → 语法验证 → 执行查询 → 结果展示 → 自动可视化 → 用户评分反馈
```

